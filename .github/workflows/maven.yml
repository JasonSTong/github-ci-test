# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Deploy with Maven

on:
  push:
    branches: [ master ]
    tags: [release-v*]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        # 这里使用java11的环境, 其他项目在github action中找到对应的语言环境就行
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build with Maven
        # 这里maven的打包命令, 其他项目修改为对应的打包命令
        run: |
          mvn package
      - name: Push Docker
        run: |
          docker login --username=18690432061 --password 123.qwe123 registry.cn-shanghai.aliyuncs.com
          docker build . -t registry.cn-shanghai.aliyuncs.com/github_ci/github_ci_test:$GITHUB_RUN_NUMBER
          docker push registry.cn-shanghai.aliyuncs.com/github_ci/github_ci_test:$GITHUB_RUN_NUMBER
          docker tag $(docker images registry.cn-shanghai.aliyuncs.com/github_ci/github_ci_test:$GITHUB_RUN_NUMBER -q) registry.cn-shanghai.aliyuncs.com/github_ci/github_ci_test:latest
          docker push registry.cn-shanghai.aliyuncs.com/github_ci/github_ci_test:latest




  pull-docker:
    needs: [build]
    name: Pull Docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOSTUSERNAME }}
          password: ${{ secrets.PWD }}
          port: 22
          script: |
            docker stop $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q)
            docker rm -f $(docker ps -a --filter ancestor=${{ secrets.REGISTRY }}:latest -q)
            docker rmi -f $(docker images  ${{ secrets.REGISTRY }}:latest -q)
            docker login --username=${{ secrets.USERNAME }} --password ${{ secrets.PASSWORD }} registry.cn-shanghai.aliyuncs.com
            docker pull ${{ secrets.REGISTRY }}:latest
            docker run -d -p 8080:8080 ${{ secrets.REGISTRY }}:latest
# 上面暴露出了 8060端口, 填你项目端口即可 (没有端口可忽略)




